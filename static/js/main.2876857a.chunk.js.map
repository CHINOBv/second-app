{"version":3,"sources":["components/img/img1.jpg","components/img/img2.jpg","components/img/img3.jpg","components/Header/Carimg.jsx","components/Header/Navegation.jsx","components/Conten/Cards/Card.jsx","components/Conten/Form/Form.jsx","components/Conten/Conten.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Carimg","state","id","className","data-ride","role","src","img1","data-src","alt","img2","img3","href","data-slide","aria-hidden","Component","Navegation","props","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","Card","img","text","title","style","width","height","defaultProps","Form","user","mai","CUser","bind","CMail","e","this","setState","target","value","name","placeholder","onChange","cards","Conten","map","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2876857a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/img1.703d3a7e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/img2.c1f79508.jpg\";","module.exports = __webpack_public_path__ + \"static/media/img3.abf374c2.jpg\";","import React, { Component } from \"react\";\nimport './style-Carimg.css'\nimport img1 from '../img/img1.jpg';\nimport img2 from '../img/img2.jpg'\nimport img3 from '../img/img3.jpg'\n\nclass Carimg extends Component {\n  state = {};\n  render() {\n    return (\n      <div\n        id=\"carouselFadeExampleIndicators\"\n        className=\"carousel slide carousel-fade container\"\n        data-ride=\"carousel\"\n      >\n        <div className=\"carousel-inner\" role=\"listbox\">\n          <div className=\"carousel-item active\">\n            <img\n              className=\"d-block w-100\"\n              src={img1}\n              data-src=\"holder.js/900x400?theme=social\"\n              alt=\"First slide\"\n            />\n          </div>\n          <div className=\"carousel-item\">\n            <img\n              className=\"d-block w-100\"\n              src={img2}\n              data-src=\"holder.js/900x400?theme=industrial\"\n              alt=\"Second slide\"\n            />\n          </div>\n          <div className=\"carousel-item\">\n            <img\n              className=\"d-block w-100\"\n              src={img3}\n              data-src=\"holder.js/900x400?theme=industrial\"\n              alt=\"Third slide\"\n            />\n          </div>\n        </div>\n        <a\n          className=\"carousel-control-prev\"\n          href=\"#carouselFadeExampleIndicators\"\n          role=\"button\"\n          data-slide=\"prev\"\n        >\n          <span className=\"carousel-control-prev-icon\" aria-hidden=\"true\" />\n          <span className=\"sr-only\">Previous</span>\n        </a>\n        <a\n          className=\"carousel-control-next\"\n          href=\"#carouselFadeExampleIndicators\"\n          role=\"button\"\n          data-slide=\"next\"\n        >\n          <span className=\"carousel-control-next-icon\" aria-hidden=\"true\" />\n          <span className=\"sr-only\">Next</span>\n        </a>\n      </div>\n    );\n  }\n}\n\nexport default Carimg;\n","import React, { Component } from \"react\";\nimport './styl.css'\nimport Carimg from './Carimg.jsx';\n\nclass Navegation extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    return (\n      <>\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark fixed-top\">\n          <a className=\"navbar-brand\" href=\"https://www.google.com\">\n            Navbar\n          </a>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#navbarNavAltMarkup\"\n            aria-controls=\"navbarNavAltMarkup\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n          <div\n            className=\"collapse navbar-collapse \"\n            id=\"navbarNavAltMarkup\"\n          >\n            <div className=\"navbar-nav\">\n              <a\n                className=\"nav-item nav-link active\"\n                href=\"https://www.google.com\"\n              >\n                Home <span className=\"sr-only\">(current)</span>\n              </a>\n              <a className=\"nav-item nav-link\" href=\"https://www.google.com\">\n                Features\n              </a>\n              <a className=\"nav-item nav-link\" href=\"https://www.google.com\">\n                Pricing\n              </a>\n            </div>\n          </div>\n        </nav>\n        <Carimg/>\n      </>\n    );\n  }\n}\n\nexport default Navegation;\n","import React from \"react\";\nimport PropTypes from 'prop-types';\n\nconst Card = ({img,text, title}) =>{\n    return (\n        <div className=\" col-sm-16 mx-2 my-3\">\n            <div className=\"card\" style={{width: '18rem'}}>\n                <img src={img} className=\"card-img-top img-thumbnail\" alt={title} style={{height:\"13rem\"}}/>\n                <div className=\"card-body\">\n                    <h5 className=\"card-title\">Card title: {title}</h5>\n                    <p className=\"card-text\">Texto: {text}</p>\n                    <a href=\"10.0.0.9:3000\" className=\"btn btn-primary\">Go somewhere</a>\n                </div>\n            </div>\n        </div>\n    )\n  }\n\nCard.propTypes={\n    img: PropTypes.string,\n    text: PropTypes.string,\n    title: PropTypes.string\n}\nCard.defaultProps={\n    img: \"error\",\n    text: \"error\",\n    title: \"Error\"\n}\n\nexport default Card;\n","import React, { Component } from 'react';\nclass Form extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            user:\"\",\n            mai:\"\"\n        };\n        this.CUser = this.CUser.bind(this);\n        this.CMail = this.CMail.bind(this);\n    }\n\n    CUser (e){\n        this.setState({\n            user: e.target.value\n        })\n    }\n\n\n    CMail (e){\n        this.setState({\n            mai: e.target.value\n        })\n    }\n    render() {\n        return (\n            <div className=\"container\">\n                <form className=\"form-group\">\n                    <input type=\"text\" name=\"User\" id=\"User\" placeholder=\"User\" className=\"form-control my-2\" onChange={this.CUser}/>\n                    <input type=\"text\" name=\"Mail\" id=\"Mail\" placeholder=\"Email\" className=\"form-control\" onChange={this.CMail}/>\n                </form>\n                <h1>User: {this.state.user}</h1>\n                <h1>Mail: {this.state.mai}</h1>\n            </div>\n        );\n    }\n}\n\nexport default Form;","import React from 'react';\nimport Card from './Cards/Card.jsx'\nimport Form from './Form/Form.jsx'\n\nimport img1 from '../img/img1.jpg';\nimport img2 from '../img/img2.jpg'\nimport img3 from '../img/img3.jpg'\n\nconst cards = [\n    {\n        img: img1,\n        text: \"Texto 1 para demo\",\n        title: \"Titulo 1\"\n    },\n    {\n        img: img2,\n        text: \"Texto 2 para demo\",\n        title: \"Titulo 2\"\n    },\n    {\n        img: img3,\n        text: \"Texto 3 para demo\",\n        title: \"Titulo3\"\n    }\n\n];\n\nconst Conten = () => {\n    return (\n        <>\n            <div className=\"row flex-d justify-content-center\">\n            {cards.map (cards=>(\n                <Card img={cards.img} text={cards.text} title={cards.title}/>\n            ))}\n            </div>\n            <hr/> <h1 className=\"my-5\">Formulario</h1>\n            <Form/>\n        </>\n    );\n}\n\nexport default Conten;","import React from 'react';\nimport Navegation from \"./components/Header/Navegation.jsx\"\nimport Conten from \"./components/Conten/Conten.jsx\"\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navegation/>\n      <Conten/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n//import 'bootstrap/dist/css/bootstrap.min.css'\nimport 'spur-template/dist/css/spur.min.css';\nimport 'bootstrap/dist/js/bootstrap.min.js'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}